{"version":3,"sources":["src/script.js"],"names":["require","rows","columns","layoutElement","document","getElementById","i","j","plot","createElement","classList","add","setAttribute","concat","appendChild","samplePlot","assignService","event","target","service","prompt","remove","alert","plots","querySelectorAll","recommendHouse","houses","length","bestHouse","bestScore","forEach","house","houseCoords","getAttribute","split","slice","houseRow","parseInt","houseColumn","score","contains","addEventListener","recommendButton"],"mappings":";;;AA0GyD,aA1GzDA,QAAA,eAMA,IAJA,IAAMC,EAAO,EACPC,EAAU,EAEVC,EAAgBC,SAASC,eAAe,UACrCC,EAAI,EAAGA,EAAIL,EAAMK,IACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAASK,IAAK,CAChC,IAAMC,EAAOJ,SAASK,cAAc,OACpCD,EAAKE,UAAUC,IAAI,QACnBH,EAAKI,aAAa,KAAIC,QAAAA,OAAUP,EAACO,KAAAA,OAAIN,IACrCJ,EAAcW,YAAYN,GAI9B,IAAMO,EAAaX,SAASC,eAAe,YAG3C,SAASW,EAAcC,GACrB,IAAMT,EAAOS,EAAMC,OACbC,EAAUC,OACd,yDAIY,UAAZD,GACY,eAAZA,GACY,QAAZA,GACY,aAAZA,GAEAX,EAAKE,UAAUW,OAAO,QAAS,aAAc,MAAO,YACpDb,EAAKE,UAAUC,IAAIQ,IAEnBG,MAAM,4BAjBVP,EAAWL,UAAUC,IAAI,SAqBzB,IAAMY,EAAQnB,SAASoB,iBAAiB,SAKxC,SAASC,IACP,IAAMC,EAAStB,SAASoB,iBAAiB,UACzC,GAAsB,IAAlBE,EAAOC,OAAX,CAKA,IAAIC,EAAY,KACZC,GAAa,EAEjBH,EAAOI,QAAQ,SAACC,GACd,IAAMC,EAAcD,EAAME,aAAa,MAAMC,MAAM,KAAKC,MAAM,GACxDC,EAAWC,SAASL,EAAY,IAChCM,EAAcD,SAASL,EAAY,IAErCO,EAAQ,EAERH,EAAW,IACKhC,SAASC,eAAcQ,QAAAA,OAC/BuB,EAAW,EAACvB,KAAAA,OAAIyB,IAEZ5B,UAAU8B,SAAS,eAC/BD,KAGAH,EAAWnC,EAAO,IACFG,SAASC,eAAcQ,QAAAA,OAC/BuB,EAAW,EAACvB,KAAAA,OAAIyB,IAEZ5B,UAAU8B,SAAS,eAC/BD,KAGAD,EAAc,IACClC,SAASC,eAAcQ,QAAAA,OAC9BuB,EAAQvB,KAAAA,OAAIyB,EAAc,IAEvB5B,UAAU8B,SAAS,eAC9BD,KAGAD,EAAcpC,EAAU,IACRE,SAASC,eAAcQ,QAAAA,OAC/BuB,EAAQvB,KAAAA,OAAIyB,EAAc,IAEtB5B,UAAU8B,SAAS,eAC/BD,KAIAA,EAAQV,IACVD,EAAYG,EACZF,EAAYU,KAIZX,EACFN,MAAKT,yBAAAA,OAA0Be,EAAUK,aAAa,QAEtDX,MAAM,iCAxDNA,MAAM,oBAPVC,EAAMO,QAAQ,SAACtB,GACbA,EAAKiC,iBAAiB,QAASzB,KAkEjC,IAAM0B,EAAkBtC,SAASC,eAAe,mBAChDqC,EAAgBD,iBAAiB,QAAShB","file":"script.0cd80332.js","sourceRoot":"..","sourcesContent":["import \"./style.css\";\n\nconst rows = 8;\nconst columns = 8;\n\nconst layoutElement = document.getElementById(\"layout\");\nfor (let i = 0; i < rows; i++) {\n  for (let j = 0; j < columns; j++) {\n    const plot = document.createElement(\"div\");\n    plot.classList.add(\"plot\");\n    plot.setAttribute(\"id\", `plot_${i}_${j}`);\n    layoutElement.appendChild(plot);\n  }\n}\n\nconst samplePlot = document.getElementById(\"plot_0_0\");\nsamplePlot.classList.add(\"house\");\n\nfunction assignService(event) {\n  const plot = event.target;\n  const service = prompt(\n    \"Enter the service (house, restaurant, gym, hospital):\"\n  );\n\n  if (\n    service === \"house\" ||\n    service === \"restaurant\" ||\n    service === \"gym\" ||\n    service === \"hospital\"\n  ) {\n    plot.classList.remove(\"house\", \"restaurant\", \"gym\", \"hospital\");\n    plot.classList.add(service);\n  } else {\n    alert(\"Invalid service entered!\");\n  }\n}\n\nconst plots = document.querySelectorAll(\".plot\");\nplots.forEach((plot) => {\n  plot.addEventListener(\"click\", assignService);\n});\n\nfunction recommendHouse() {\n  const houses = document.querySelectorAll(\".house\");\n  if (houses.length === 0) {\n    alert(\"No houses found!\");\n    return;\n  }\n\n  let bestHouse = null;\n  let bestScore = -1;\n\n  houses.forEach((house) => {\n    const houseCoords = house.getAttribute(\"id\").split(\"_\").slice(1);\n    const houseRow = parseInt(houseCoords[0]);\n    const houseColumn = parseInt(houseCoords[1]);\n\n    let score = 0;\n\n    if (houseRow > 0) {\n      const plotAbove = document.getElementById(\n        `plot_${houseRow - 1}_${houseColumn}`\n      );\n      if (plotAbove.classList.contains(\"restaurant\")) {\n        score++;\n      }\n    }\n    if (houseRow < rows - 1) {\n      const plotBelow = document.getElementById(\n        `plot_${houseRow + 1}_${houseColumn}`\n      );\n      if (plotBelow.classList.contains(\"restaurant\")) {\n        score++;\n      }\n    }\n    if (houseColumn > 0) {\n      const plotLeft = document.getElementById(\n        `plot_${houseRow}_${houseColumn - 1}`\n      );\n      if (plotLeft.classList.contains(\"restaurant\")) {\n        score++;\n      }\n    }\n    if (houseColumn < columns - 1) {\n      const plotRight = document.getElementById(\n        `plot_${houseRow}_${houseColumn + 1}`\n      );\n      if (plotRight.classList.contains(\"restaurant\")) {\n        score++;\n      }\n    }\n\n    if (score > bestScore) {\n      bestHouse = house;\n      bestScore = score;\n    }\n  });\n\n  if (bestHouse) {\n    alert(`Best house to choose: ${bestHouse.getAttribute(\"id\")}`);\n  } else {\n    alert(\"No suitable house found!\");\n  }\n}\n\nconst recommendButton = document.getElementById(\"recommendButton\");\nrecommendButton.addEventListener(\"click\", recommendHouse);\n"]}